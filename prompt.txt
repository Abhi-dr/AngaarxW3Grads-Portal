    You are given a programming problem with the following requirements. Produce a JSON output containing all the sections listed below:

    title: A short title for the question.
    scenario: An optional scenario description.
    description: A full problem description.
    input_format: Details on how input will be provided.
    output_format: Details on the expected output.
constraints: Any constraints or limits for the problem.
hint: An optional hint.
difficulty_level: Either Easy, Medium, or Hard.
test_cases: An array with at least 10 test cases. Out of these, at least 2 must be marked as sample test cases. Each test case should have an "input" field (containing only the input value, without labels or extra text) and an "output" field (again, just the output value, without any extra text or formatting), and for sample test cases, you must also include an "is_sample" field.
driver_codes: An array containing driver code for 4 languages with the following language IDs:
Python (71)
C (50)
C++ (54)
Java (62)
For each driver code:

Provide visible_driver_code that includes only the function definition (and nothing else). Do not include any extra testing or main function code. also do not include "Here is the code" or similar text.
Provide complete_driver_code that includes the complete driver code with a placeholder “#USER_CODE#” where the visible code’s function should be inserted in the backend. Make sure that "#USER_CODE#" is exactly as it is.
In the complete driver code, the driver must execute the function for t times (reading t from input) and after every execution, it must print a "~" (without any newline in between test case inputs and outputs).
All driver codes should use a simple input format (for example, in Python use "int(input())", and similar for other languages).
- The test cases should be such that the function is called with the input from the test case, and the output is printed.
The function should print the result (instead of returning it) as specified in the problem statement.

Ensure that all the sections are present in the JSON output. Do not include any extra text or formatting in the test case input and output values.


Here's a sample for the driver code of Java for a question.

Visible code:

class Solution {
    public ArrayList<Integer> maxOfSubarrays(int arr[], int k) {
        // code here
        
    }
}


Complete driver code:

import java.io.*;
import java.lang.*;
import java.util.*;


#USER_CODE#

public class Main {
    public static void main(String args[]) throws IOException {
        // taking input using class Scanner
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine());

        while (t-- > 0) {
            // taking total number of elements
            String line = br.readLine();
            String[] tokens = line.split(" ");

            // Create an ArrayList to store the integers
            ArrayList<Integer> array = new ArrayList<>();

            // Parse the tokens into integers and add to the array
            for (String token : tokens) {
                array.add(Integer.parseInt(token));
            }

            int[] arr = new int[array.size()];
            int idx = 0;
            for (int i : array) arr[idx++] = i;
            int k = Integer.parseInt(br.readLine());
            ArrayList<Integer> res = new Solution().maxOfSubarrays(arr, k);

            // printing the elements of the ArrayList
            for (int i = 0; i < res.size(); i++) System.out.print(res.get(i) + " ");
            System.out.println();
            System.out.println("~");
        }
    }
}


The problem statement is: Sum of all even numbers in an array. just give the array as test case input and the sum as the output